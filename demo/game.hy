(do (defclass Py2HyReturnException [Exception] (defn __init__ [self retvalue] (setv self.retvalue retvalue))) (import [sys]) (defn game [] "Using a hacky implementation of `return`" (try (do (setv args []) (setv inventory []) (defn setargs [l] (nonlocal args) (setv args ((. l rstrip)))) (defn getPromptObj [l] "Using a hacky implementation of `return`" (try (do (raise (Py2HyReturnException (, "p" l setargs)))) (except [e Py2HyReturnException] e.retvalue))) (defn getNextObj [] "Using a hacky implementation of `return`" (try (do (raise (Py2HyReturnException (, "n")))) (except [e Py2HyReturnException] e.retvalue))) (print "You wake up to find yourself laying down inside a dark cave.") (print "What will you do?") (yield (getPromptObj (, (, "0" "Check your bag") (, "1" "Call for help")))) (if (= args "0") (do (print "You found a lighter inside your bag.") ((. inventory append) "lighter")) (do (when (= args "1") (do (print "Your voice echos through the cave..."))))) (yield (getNextObj)) (while True (print "What will you do next?") (yield (getPromptObj (, (, "0" "Stand up") (, "1" "Continue laying down")))) (if (= args "0") (do (print "You find a way leading outside of the cave.") (break)) (do (print "You spend several minutes in the dark, but no help seems to arrive...")))) (print "To be continued...")) (except [e Py2HyReturnException] e.retvalue))) (defn gameloop [game] (for [o game] (when (not o) (do (break))) (if (= (get o 0) "n") (do (print "Hit enter to continue...") ((. (. sys stdin) readline)) (yield "")) (do (when (= (get o 0) "p") (do (setv d (get o 1)) (for [k d] (print (get k 0) (get k 1))) (print "> " :end "" :flush True) (setv choice ((. (. sys stdin) readline))) ((get o 2) choice) (yield ""))))))) (defn trynext [g] (try (do (next g)) (except [e Exception] [None]))) (when (= __name__ "__main__") (do (for [i (gameloop (game))] None))))